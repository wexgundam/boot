##############################################
# SPRING SESSION (SessionProperties)
# Session store type.
spring.session.store-type=redis
# Sessions flush mode.
spring.session.redis.flush-mode=immediate
# Namespace for keys used to store sessions.
# spring.session.redis.namespace=
# Sessions flush mode.
# spring.session.hazelcast.flush-mode=on-save
# Name of the map used to store sessions.
# spring.session.hazelcast.map-name=spring:session:sessions
# Create the required session tables on startup if necessary. Enabled automatically if the default table name is set or a custom schema is configured.
# spring.session.jdbc.initializer.enabled=
# Path to the SQL file to use to initialize the database schema.
# spring.session.jdbc.schema=classpath:org/springframework/session/jdbc/schema-@@platform@@.sql
# Name of database table used to store sessions.
# spring.session.jdbc.table-name=SPRING_SESSION
# Collection name used to store sessions.
# spring.session.mongo.collection-name=sessions

##############################################
# MULTIPART (MultipartProperties)
# Enable support of multi-part uploads.
spring.http.multipart.enabled=true
# Threshold after which files will be written to disk. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
spring.http.multipart.file-size-threshold=0
# Intermediate location of uploaded files.
spring.http.multipart.location=
# Max file size. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
spring.http.multipart.max-file-size=1MB
# Max request size. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
spring.http.multipart.max-request-size=10MB
# Whether to resolve the multipart request lazily at the time of file or parameter access.
spring.http.multipart.resolve-lazily=false