package org.mose.springboot.system.dao;

import org.mose.springboot.dao.stream.AbstractStreamRepository;
import org.mose.springboot.system.modal.Scenario;
import org.springframework.context.annotation.Profile;
import org.springframework.stereotype.Component;

import java.util.List;

/**
 * Description:
 *
 * @Author: 靳磊
 * @Date: 2017/8/14:22
 */
@Profile("mysql")
@Component
public class ScenarioMysqlRepository extends AbstractStreamRepository<Scenario, Integer> implements IScenarioRepository {
    @Override
    public Scenario queryOne(int id) {
        String sql = "select id, name, description, parent_id, url, icon, display_order from T_SCENARIO where id=?";
        return query().sql(sql).parameters(id).queryOne();
    }

    @Override
    public List<Scenario> queryAll() {
        String sql = "select id, name ,description, parent_id, url, icon, display_order from T_SCENARIO";
        return query().sql(sql).queryMany();
    }

    @Override
    public Integer insertOne(Scenario scenario) {
        StringBuffer sql = new StringBuffer();
        sql.append("insert into T_SCENARIO(name, description, parent_id, url, icon, display_order)");
        sql.append(" values(:name, :description, :parentId, :url, :icon, :displayOrder)");
        Number id = insert().sql(sql.substring(0)).entity(scenario).idColumnName(
                "id").insertOneForAutoGeneratedId();
        return id == null ? null : id.intValue();
    }

    @Override
    public int updateOne(Scenario scenario) {
        StringBuffer sql = new StringBuffer();
        sql.append("update T_SCENARIO set name=:name, description=:description, parent_id=:parentId, url=:url, icon=:icon, display_order=:displayOrder");
        sql.append(" where id=:id");
        return update().sql(sql.substring(0)).parameterBean(scenario).updateAny();
    }

    @Override
    public int deleteOne(Scenario scenario) {
        String sql = "delete from T_SCENARIO where id=:id";
        return delete().sql(sql).parameterBean(scenario).deleteAny();
    }
}
